/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

var video = document.querySelector('.video');
var tabTitle = document.querySelectorAll('.season-tickets__nav-item');
var tabContent = document.querySelectorAll('.season-tickets__wrap');

if (typeof video !== 'undefined' && video !== null) {
  var media = video.querySelector('.video__media'); // Картинка

  var button = video.querySelector('.video__button'); // Кнопка

  if (typeof (media && button) !== 'undefined' && media && button !== null) {
    var setupVideo = function setupVideo() {
      button.addEventListener('click', function () {
        var iframe = createIframe();
        media.remove();
        button.remove();
        video.appendChild(iframe);
      });
    };

    var createIframe = function createIframe() {
      var iframe = document.createElement('iframe');
      iframe.setAttribute('allowfullscreen', '');
      iframe.setAttribute('allow', 'autoplay');
      iframe.setAttribute('src', generateURL());
      iframe.classList.add('video__ambed');
      return iframe;
    };

    var generateURL = function generateURL() {
      var query = '?rel=0&showinfo=0&autoplay=1';
      return 'https://www.youtube.com/embed/9TZXsZItgdw' + query;
    };

    setupVideo();
  }
}

if (typeof (tabTitle && tabContent) !== 'undefined' && tabTitle && tabContent !== null) {
  var getDeliteTabTitleCurrentStyle = function getDeliteTabTitleCurrentStyle() {
    tabTitle.forEach(function (item) {
      item.classList.remove('season-tickets__nav-item--current');
    });
  };

  var getDeliteTabContentCurrentStyle = function getDeliteTabContentCurrentStyle() {
    tabContent.forEach(function (item) {
      item.classList.remove('season-tickets__wrap--current');
    });
  };

  var getAddTabTitleCurrentStyle = function getAddTabTitleCurrentStyle(item) {
    var numb = tabTitle.length;

    for (var i = 0; i < numb; i++) {
      if (i === item) {
        tabTitle[i].classList.add('season-tickets__nav-item--current');
      }
    }
  };

  var getAddTabContentCurrentStyle = function getAddTabContentCurrentStyle(item) {
    var numb = tabContent.length;

    for (var i = 0; i < numb; i++) {
      if (i === item) {
        tabContent[i].classList.add('season-tickets__wrap--current');
      }
    }
  };

  tabTitle.forEach(function (item) {
    item.addEventListener('click', function (evt) {
      var numb = tabTitle.length;

      for (var i = 0; i < numb; i++) {
        if (evt.currentTarget === tabTitle[i]) {
          getDeliteTabTitleCurrentStyle();
          getDeliteTabContentCurrentStyle();
          getAddTabTitleCurrentStyle(i);
          getAddTabContentCurrentStyle(i);
          break;
        }
      }
    });
  });
}

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map